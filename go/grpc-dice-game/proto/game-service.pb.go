// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game-service.proto

/*
Package game_service is a generated protocol buffer package.

It is generated from these files:
	game-service.proto

It has these top-level messages:
	TurnRequest
	TurnResponse
*/
package game_service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TurnRequest struct {
	Roll int32 `protobuf:"varint,1,opt,name=roll" json:"roll,omitempty"`
}

func (m *TurnRequest) Reset()                    { *m = TurnRequest{} }
func (m *TurnRequest) String() string            { return proto.CompactTextString(m) }
func (*TurnRequest) ProtoMessage()               {}
func (*TurnRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TurnRequest) GetRoll() int32 {
	if m != nil {
		return m.Roll
	}
	return 0
}

type TurnResponse struct {
	ClientRoll int32 `protobuf:"varint,1,opt,name=clientRoll" json:"clientRoll,omitempty"`
	ServerRoll int32 `protobuf:"varint,2,opt,name=serverRoll" json:"serverRoll,omitempty"`
	Won        bool  `protobuf:"varint,3,opt,name=won" json:"won,omitempty"`
}

func (m *TurnResponse) Reset()                    { *m = TurnResponse{} }
func (m *TurnResponse) String() string            { return proto.CompactTextString(m) }
func (*TurnResponse) ProtoMessage()               {}
func (*TurnResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TurnResponse) GetClientRoll() int32 {
	if m != nil {
		return m.ClientRoll
	}
	return 0
}

func (m *TurnResponse) GetServerRoll() int32 {
	if m != nil {
		return m.ServerRoll
	}
	return 0
}

func (m *TurnResponse) GetWon() bool {
	if m != nil {
		return m.Won
	}
	return false
}

func init() {
	proto.RegisterType((*TurnRequest)(nil), "TurnRequest")
	proto.RegisterType((*TurnResponse)(nil), "TurnResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DiceGameService service

type DiceGameServiceClient interface {
	Play(ctx context.Context, in *TurnRequest, opts ...grpc.CallOption) (*TurnResponse, error)
}

type diceGameServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiceGameServiceClient(cc *grpc.ClientConn) DiceGameServiceClient {
	return &diceGameServiceClient{cc}
}

func (c *diceGameServiceClient) Play(ctx context.Context, in *TurnRequest, opts ...grpc.CallOption) (*TurnResponse, error) {
	out := new(TurnResponse)
	err := grpc.Invoke(ctx, "/DiceGameService/Play", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DiceGameService service

type DiceGameServiceServer interface {
	Play(context.Context, *TurnRequest) (*TurnResponse, error)
}

func RegisterDiceGameServiceServer(s *grpc.Server, srv DiceGameServiceServer) {
	s.RegisterService(&_DiceGameService_serviceDesc, srv)
}

func _DiceGameService_Play_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TurnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiceGameServiceServer).Play(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiceGameService/Play",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiceGameServiceServer).Play(ctx, req.(*TurnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiceGameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DiceGameService",
	HandlerType: (*DiceGameServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Play",
			Handler:    _DiceGameService_Play_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "game-service.proto",
}

func init() { proto.RegisterFile("game-service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0x4f, 0xcc, 0x4d,
	0xd5, 0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52,
	0xe4, 0xe2, 0x0e, 0x29, 0x2d, 0xca, 0x0b, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2,
	0x62, 0x29, 0xca, 0xcf, 0xc9, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x02, 0xb3, 0x95, 0x12,
	0xb8, 0x78, 0x20, 0x4a, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xe4, 0xb8, 0xb8, 0x92, 0x73,
	0x32, 0x53, 0xf3, 0x4a, 0x82, 0x10, 0x2a, 0x91, 0x44, 0x40, 0xf2, 0x20, 0x3b, 0x52, 0x8b, 0xc0,
	0xf2, 0x4c, 0x10, 0x79, 0x84, 0x88, 0x90, 0x00, 0x17, 0x73, 0x79, 0x7e, 0x9e, 0x04, 0xb3, 0x02,
	0xa3, 0x06, 0x47, 0x10, 0x88, 0x69, 0x64, 0xc6, 0xc5, 0xef, 0x92, 0x99, 0x9c, 0xea, 0x9e, 0x98,
	0x9b, 0x1a, 0x0c, 0x71, 0x9d, 0x90, 0x32, 0x17, 0x4b, 0x40, 0x4e, 0x62, 0xa5, 0x10, 0x8f, 0x1e,
	0x92, 0xf3, 0xa4, 0x78, 0xf5, 0x90, 0x5d, 0x92, 0xc4, 0x06, 0xf6, 0x83, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x48, 0x08, 0xaa, 0xa7, 0xd9, 0x00, 0x00, 0x00,
}
